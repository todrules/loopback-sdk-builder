#!/usr/bin/env node

let path = require('path');
let semver = require('semver');
let optimist = require('optimist');
let generator = require('../index');
let fs = require('extfs');
let chalk = require('chalk');
/**
 * CLI Options Description
 */
let argv = optimist
  .usage('\n******************************************* LoopBack SDK Builder 2.0 *******************************************\n' +
  '\nGenerate Client SDK for your LoopBack Application.' +
  '\nUsage:' +
		'\n ./node_modules/.bin/lb-sdk server/server app/shared/sdk -d [ng4web | nativescript2] -i [enabled |Â disabled]')
  .describe('l', 'Client\'s library (angular2, react <todo>, ...)')
.describe('d', 'Platform specific drivers (ng4web, nativescript2, ng2universal <todo>)')
  .describe('i', 'Enable PubSub, IO and FireLoop functionality')
  .describe('w', 'Automatically wipe SDK Directory')
  .default('l', 'angular2')
.default('d', 'ng4web')
  .default('i', 'enabled')
  .default('w', 'disabled')
.alias({ u: 'url', m: 'module-name', l: 'library', i: 'io', d: 'driver', w: 'wipe' })
  .demand(1)
  .argv;
/**
 * Splash ACII Art
 */
console.log(chalk.yellow(
	'\n\n=========================================================================================='));
console.log(chalk.yellow('* 888       e88 88e     e88 88e   888 88e  888 88b,     e Y8b       e88\'Y88 888 88P      *'));
console.log(chalk.yellow('* 888      d888 888b   d888 888b  888 888D 888 88P\'    d8b Y8b     d888  \'Y 888 8P       *'));
console.log(chalk.yellow('* 888     C8888 8888D C8888 8888D 888 88"  888 8K     d888b Y8b   C8888     888 K        *'));
console.log(chalk.yellow('* 888  ,d  Y888 888P   Y888 888P  888      888 88b,  d888888888b   Y888  ,d 888 8b       *'));
console.log(chalk.yellow('* 888,d88   "88 88"     "88 88"   888      888 88P\' d8888888b Y8b   "88,d88 888 88b      *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*     e Y8b     Y88b Y88   e88\'Y88  8888 8888 888         e Y8b     888 88e  ,8,"88e     *'));
console.log(chalk.yellow('*    d8b Y8b     Y88b Y8  d888  \'Y  8888 8888 888        d8b Y8b    888 888D  "  888D    *'));
console.log(chalk.yellow('*   d888b Y8b   b Y88b Y C8888 eeee 8888 8888 888       d888b Y8b   888 88"      88P     *'));
console.log(chalk.yellow('*  d888888888b  8b Y88b   Y888 888P 8888 8888 888  ,d  d888888888b  888 b,      ,*"      *'));
console.log(chalk.yellow('* d8888888b Y8b 88b Y88b   "88 88"  \'Y88 88P\' 888,d88 d8888888b Y8b 888 88b,  8888888    *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*                  dP"8 888 88e   888 88P     e88\'Y88  888\'Y88 Y88b Y88                  *'));
console.log(chalk.yellow('*                 C8b Y 888 888b  888 8P     d888  \'Y  888 ,\'Y  Y88b Y8                  *'));
console.log(chalk.yellow('*                  Y8b  888 8888D 888 K     C8888 eeee 888C8   b Y88b Y                  *'));
console.log(chalk.yellow('*                 b Y8D 888 888P  888 8b     Y888 888P 888 ",d 8b Y88b                   *'));
console.log(chalk.yellow('*                 8edP  888 88"   888 88b     "88 88"  888,d88 88b Y88b                  *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('*                                 ORIGINALLY FORKED FROM                                 *'));
console.log(chalk.yellow('*                      Miroslav Bajtos\' <miroslav@strongloop.com>                       *'));
console.log(chalk.yellow('*                   https://github.com/strongloop/loopback-sdk-angular                   *'));
console.log(chalk.yellow('*                                                                                        *'));
console.log(chalk.yellow('=========================================================================================='));

console.log('\n\Here we go!! ...\n\n');
console.log(chalk.green('\n\If you notice smoke rising from your computer, don\'t panic!\n\n'));
console.log(chalk.green('\n\It\'s perfectly normal...\n\n'));
console.log(chalk.red('\n\If you see flames, then run!\n\n'));

/**
 * Set Reference For Main Options
 */
let appFile = path.resolve(argv._[ 0 ]);
/**
 * Load and Boot LoopBack Application
 */
let app = require(appFile);

let outPath = path.resolve(argv._[ 1 ]);

if (app.booting) {
  app.on('booted', verifyPath);
} else {
  verifyPath();
}

// Default Values
let context = {
  app: app,
	framework: 'angular2',
	moduleName: 'sdk',
	apiUrl: app.get('restApiRoot') || '/api',
  outputFolder: argv._[1],
	isIo: 'disabled',
	driver: 'ng4web',
	wipe: 'disabled',
	modelDir: 'client/models',
	servicesDir: 'client/services/generated',
	apiDir: 'client/api'
};

function verifyPath() {
	if (fs.isEmptySync(context.modelDir)) {
    runGenerator()
	} else if (fs.isEmptySync(context.modelDir) || context.wipe === 'enabled') {
    console.log(chalk.yellow('WARNING: The targeted SDK Directory is not empty but the "-w" flag is enabled. Removing contents.\n\n'));
    runGenerator();
  } else {
    const readline = require('readline');
    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });
		
		rl.question(chalk.yellow('WARNING: The following directories are not empty:\n\n' +
				chalk.magenta(outPath)) + '\n' +
			chalk.magenta(path.resolve(context.modelDir)) + '\n' +
			chalk.magenta(path.resolve(context.servicesDir)) + '\n' +
			chalk.magenta(path.resolve(context.apiDir)) + '\n\n' +
			'Do you want to erase its content? (Y/n)', (answer) => {
      switch (answer) {
        case 'No':
        case 'no':
        case 'N':
        case 'n':
        case 'nop':
        case 'nope':
        case 'na':
          console.log(chalk.red('The LoopBack SDK Builder was unable to complete the operation. Finishing process right now.\n\n'));
          break;
        default:
          runGenerator()
      }
      rl.close();
    });
  };
}

/**
 * Generator Logic
 */
function runGenerator() {
  // Load Selected Generator
  console.info('Loading Framework %s', context.framework);
  console.info('Generating %j for the API endpoint %j', context.moduleName, context.apiUrl);
  //try {
  generator[context.framework](context);
  console.info('\n\nEnjoy!!!');
  process.nextTick(function () {
    process.exit();
  });
}

